{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/tylerivie/Documents/UVUProjects/dgm3780/in-class-assignments/sandbox/nextJSClass/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport Layout from \"../comps/MyLayout\";\nimport fetch from \"isomorphic-unfetch\";\n\nvar PostLink = function PostLink(props) {\n  return __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: '/post/p[id]',\n    as: \"p/\".concat(props.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.name)));\n};\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Hey, this the layout component!\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, props.shows.map(function (show) {\n    return __jsx(PostLink, {\n      key: show.id,\n      id: show.id,\n      name: show.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    });\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.tvmaze.com/search/shows?q=batman'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(data);\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (el) {\n              return el.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/tylerivie/Documents/UVUProjects/dgm3780/in-class-assignments/sandbox/nextJSClass/pages/index.js"],"names":["Link","Layout","fetch","PostLink","props","id","name","Index","shows","map","show","getInitialProps","res","json","data","console","log","el"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACtB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE,aAAZ;AAA2B,IAAA,EAAE,cAAOA,KAAK,CAACC,EAAb,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,KAAK,CAACE,IAAV,CADJ,CADJ,CADJ;AAOH,CARD;;AAUA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAH,KAAK,EAAI;AACnB,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACI,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WACjB,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACL,EAApB;AAAwB,MAAA,EAAE,EAAEK,IAAI,CAACL,EAAjC;AAAqC,MAAA,IAAI,EAAEK,IAAI,CAACJ,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADiB;AAAA,GAApB,CADL,CAFJ,CADJ;AAUH,CAXD;;AAaAC,KAAK,CAACI,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACFT,KAAK,CAAC,8CAAD,CADH;;AAAA;AACdU,UAAAA,GADc;AAAA;AAAA,2CAEDA,GAAG,CAACC,IAAJ,EAFC;;AAAA;AAEdC,UAAAA,IAFc;AAGpBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAHoB,2CAIb;AAAEN,YAAAA,KAAK,EAAEM,IAAI,CAACL,GAAL,CAAS,UAAAQ,EAAE;AAAA,qBAAIA,EAAE,CAACP,IAAP;AAAA,aAAX;AAAT,WAJa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAOA,eAAeH,KAAf","sourcesContent":["import Link from \"next/link\";\nimport Layout from \"../comps/MyLayout\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst PostLink = props => {\n    return (\n        <li>\n            <Link href={'/post/p[id]'} as={`p/${props.id}`}>\n                <a>{props.name}</a>\n            </Link>\n        </li>\n    )\n};\n\nconst Index = props => {\n    return (\n        <Layout>\n            <p>Hey, this the layout component!</p>\n            <ul>\n                {props.shows.map(show => (\n                    <PostLink key={show.id} id={show.id} name={show.name}/>\n                ))}\n            </ul>\n        </Layout>\n    )\n};\n\nIndex.getInitialProps = async function() {\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n    const data = await res.json();\n    console.log(data);\n    return { shows: data.map(el => el.show) }\n\n};\nexport default Index;"]},"metadata":{},"sourceType":"module"}